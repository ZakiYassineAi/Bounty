{"extracted_information": "Cross-site scripting (XSS) هي ثغرة أمنية على الويب تسمح للمتسلل بإدخال (حقن) أوامر غير مرغوبة في شيفرة جانب العميل الشرعية (عادة JavaScript) التي ينفذها المتصفح نيابة عن تطبيق الويب. هذه الثغرة تُصنف ضمن هجمات الحقن. تعمل XSS عندما تقوم معظم مواقع الويب وتطبيقات الويب بتشغيل شيفرة جانب العميل في المتصفح، ومعظمها يستخدم JavaScript. تتفاعل هذه التطبيقات مع المستخدمين، مما يستلزم معالجة وإخراج مدخلات المستخدم. تُستخدم ثغرات XSS لسرقة ملفات تعريف الارتباط (cookies)، مما يمكن المهاجمين من انتحال شخصية الضحايا. تتم خطوات هجوم سرقة الكوكيز بحقن حمولة في قاعدة بيانات الموقع، ثم يقوم الضحية بطلب الصفحة من الخادم، الذي يرسل الصفحة مع حمولة المهاجم، فيقوم متصفح الضحية بتنفيذ الشيفرة الخبيثة وإرسال الكوكيز إلى خادم المهاجم، ليقوم المهاجم باستخراجها واستخدامها لانتحال الشخصية.\n\nتأثير ثغرات XSS: لا تؤثر هذه الثغرة بشكل مباشر على الواجهة الخلفية للتطبيق (خادم الويب) ولكنها تؤثر على المستخدمين العاديين للتطبيق أو الضحايا الذين يتم خداعهم. يمكن أن تحدث XSS أيضًا في بعض واجهات برمجة التطبيقات (APIs) التي تسمح بـ JavaScript. تم دمج XSS في عام 2021 ضمن فئة 'الحقن' في قائمة OWASP Top 10. يمكن للمهاجمين باستخدام JavaScript: انتحال شخصية المستخدمين، تنفيذ إجراءات نيابة عن المستخدم، الوصول إلى البيانات الحساسة عبر الحصول على كوكيز الجلسة، إرسال طلبات HTTP بمحتوى عشوائي إلى وجهات عشوائية، الوصول إلى الموقع الجغرافي للمستخدم، الميكروفون، كاميرا الويب، والملفات عبر واجهات HTML5 APIs، وقراءة نموذج كائن المستند (DOM) لإجراء تعديلات. يمكن أن تؤدي هذه الإجراءات إلى هجمات أكثر تعقيدًا مثل التصيد الاحتيالي، تسجيل ضغطات المفاتيح (keylogging)، وزراعة أحصنة طروادة.\n\nاستخدامات XSS: على الرغم من أنها لا تؤثر مباشرة على الخادم أو قاعدة البيانات، إلا أنها قد تؤدي إلى نتائج وخيمة مثل: خداع المستخدمين للحصول على بيانات الاعتماد، سرقة كوكيز الجلسة وانتحال شخصية المسؤولين، حقن JavaScript خبيث في الصفحات العادية لمهاجمة كل زائر، استخدام المواقع الضعيفة لشن حملات تصيد احتيالي ضخمة، تنزيل برمجيات خبيثة مثل برامج تعدين العملات المشفرة أو بوتات DDoS أو أحصنة طروادة أو برامج الفدية.", "specifications": {"severity": "severe", "prevalence": "discovered very often", "scope": "websites and web applications", "technical_impact": "malicious code run in the browser", "worst_case_consequences": "full system compromise", "quick_fix": "use user input filtration and encoding", "classification": {"CAPEC": 19, "CWE": 79, "WASC": 8, "OWASP_2021": "A3"}}, "pricing": {}, "features": [{"type": "أنواع هجمات XSS", "details": ["Reflected XSS (non-persistent XSS)", "Stored XSS (persistent XSS)", "DOM-based XSS"]}, {"type": "نواقل هجوم XSS الشائعة (عناصر JavaScript)", "details": ["علامة `<script>`", "سمات `onload` و `onerror` (مثال: `<img src='x' onerror='alert(1)'>`)", "سمات علامة `<iframe>` (مثال: `<iframe src='javascript:alert(1)'>`)", "سمات علامة `<img>` (مثال: `<img src='javascript:alert(1)'>`)", "علامة `<input>` (مثال: `<input type='image' src='x' onerror='alert(1)'>`)", "سمات علامة `<link>` (مثال: `<link rel='stylesheet' href='javascript:alert(1)'>`)", "علامة `<body>` (مثال: `<body onload='alert(1)'>`)", "سمات علامتي `<style>` و `<meta>` (مثال: `<style>@import 'javascript:alert(1)';</style>`)", "سمات علامة `<object>` (مثال: `<object data='javascript:alert(1)'></object>`)", "علامة `<embed>` (مثال: `<embed src='javascript:alert(1)'>`)"]}, {"type": "كيفية العثور على ثغرات XSS واختبارها", "details": [{"method": "التطبيقات التجارية أو مفتوحة المصدر", "description": "تحديد الإصدار الدقيق للتطبيق. إذا كان الإصدار معروفًا بأنه عرضة لـ XSS، يمكن افتراض أن الموقع ضعيف. يمكن تحديد الإصدار يدويًا أو باستخدام أدوات أمان مناسبة مثل حلول تحليل مكونات البرمجيات (SCA)."}, {"method": "تطوير التطبيقات الخاصة أو اكتشاف الثغرات غير المعروفة (zero-days)", "description": "يتطلب ذلك القدرة على استغلال ثغرة XSS بنجاح للتأكد من وجودها. يمكن أن يتم ذلك من خلال اختبار الاختراق اليدوي بمساعدة باحثي الأمن أو استخدام أداة اختبار أمنية (ماسح ضوئي) يمكنها استخدام الأتمتة لاستغلال ثغرات الويب. أمثلة على هذه الأدوات: Invicti و Acunetix."}]}, {"type": "كيفية منع هجمات XSS في تطبيقات الويب", "details": [{"method": "التحقق والتطهير لمدخلات المستخدم", "sub_methods": [{"name": "التصفية (Filtering)", "description": "إزالة الكلمات الخطيرة مثل `<script>` من جميع البيانات الخارجية. لا يُنصح به للمحتوى المعقد؛ فلاتر المطورين المخصصة يمكن تجاوزها بسهولة. يوصى باستخدام المكتبات التي تحتفظ بها المجتمعات.", "note": "يمكن للمتسللين تجاوز الفلاتر البسيطة باستخدام العديد من الحيل مثل الترميز السداسي عشري للأحرف الخاصة، أو استخدام اختلافات أحرف Unicode، أو إدخال فواصل الأسطر والأحرف الفارغة."}, {"name": "الهروب (Escaping / Encoding)", "description": "إخبار متصفح الويب بأن المحتوى المرسل يجب أن يُعامل كبيانات فقط ولا يجب تفسيره بأي طريقة أخرى. تحتاج إلى استخدام تقنيات هروب مختلفة في مواقف مختلفة اعتمادًا على مكان معالجة بيانات المستخدم في الصفحة.", "types": ["HTML escaping: عند استخدام بيانات غير موثوق بها بين علامات HTML الفتح والإغلاق (مثال: `<div><%=UserData%></div>`).", "JavaScript escaping: عند استخدام بيانات غير موثوق بها في سكربتات خاصة بك أو في أماكن يمكن تضمين JavaScript فيها (مثال: `<script>var x = '<%=UserData%>';</script>`).", "CSS escaping: عند استخدام بيانات غير موثوق بها في أنماط CSS (مثال: `<style>body { background-image: url('<%=UserData%>'); }</style>`).", "URL-encoding: عند استخدام بيانات غير موثوق بها في عنوان URL (مثال: `<a href='http://example.com/?param=<%=UserData%>'>Link</a>`)."]}]}, {"method": "مكتبات مساعدة للوقاية من XSS", "libraries": [{"language": "Java", "names": ["OWASP ESAPI (شاملة، بما في ذلك آليات مكافحة CSRF)", "OWASP Java Encoder Project (مركزة على حماية XSS)"]}, {"language": "PHP", "names": ["HTML Purifier (مكتبة تصفية فقط)", "htmLawed (تتضمن التصفية والهروب، تُحدّث بشكل أقل)"]}, {"language": "Microsoft technologies", "names": ["AntiXSS (مكتبة شاملة ومُحدّثة باستمرار)"]}]}, {"method": "التخفيف من هجمات XSS (Mitigation)", "mitigation_strategies": [{"name": "Content Security Policy (CSP)", "description": "جعل معظم هجمات XSS مستحيلة التنفيذ عن طريق استخدام رؤوس CSP على خادم الويب. تجعل هذه الرؤوس من المستحيل على المهاجم تضمين موارد من خارج تطبيق الويب أو التواصل مع مواقع خارجية، مما يجعل معظم هجمات XSS غير ضارة."}, {"name": "Web Application Firewall (WAF) rules", "description": "للتخفيف المؤقت، يمكن للمستخدمين عدم إدخال مدخلات ضارة في تطبيق الويب الخاص بك. ومع ذلك، يمكن للمهاجمين تجاوز هذه القواعد، ويجب ألا تُعامل كحل دائم."}], "note": "يجب عدم الاعتماد على فلاتر XSS المدمجة في المتصفحات، فقد ثبت أنها غير فعالة وسهلة التجاوز."}]}], "statistics": {"websites_vulnerable_to_xss": "حوالي واحد من كل ثلاثة مواقع ويب", "websites_with_client_side_javascript": "أكثر من 99%"}, "temporal_info": {"owasp_top_10_2021_update": "تم دمج XSS في فئة الحقن", "samy_worm_date": "أكتوبر 2005", "facebook_xss_vulnerability_date": "2011", "british_airways_breach_date": "2018"}, "geographical_data": {}, "references": [{"name": "OWASP cheat sheet for XSS prevention", "url": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"}, {"name": "XSS filter evasion", "url": "https://www.invicti.com/blog/web-security/xss-filter-evasion/"}, {"name": "OWASP ESAPI (Java)", "url": "https://owasp.org/www-project-enterprise-security-api/"}, {"name": "OWASP Java Encoder Project", "url": "https://owasp.org/www-project-java-encoder/"}, {"name": "HTML Purifier (PHP)", "url": "http://htmlpurifier.org/"}, {"name": "htmLawed (PHP)", "url": "http://www.bioinformatics.org/phplabware/internal_utilities/htmLawed/"}, {"name": "Microsoft AntiXSS (.NET)", "url": "https://documentation.help/Microsoft-AntiXSS/e4ad6086-c78f-453d-9589-0948827410e2.htm"}]}