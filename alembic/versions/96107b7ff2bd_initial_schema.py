"""Initial schema

Revision ID: 96107b7ff2bd
Revises:
Create Date: 2025-08-31 19:51:31.514006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '96107b7ff2bd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('programclean',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scope', sa.JSON(), nullable=True),
    sa.Column('vulnerability_types', sa.JSON(), nullable=True),
    sa.Column('min_bounty', sa.Float(), nullable=True),
    sa.Column('max_bounty', sa.Float(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('acceptance_rate', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_programclean_name'), 'programclean', ['name'], unique=False)
    op.create_index(op.f('ix_programclean_platform'), 'programclean', ['platform'], unique=False)
    op.create_index(op.f('ix_programclean_status'), 'programclean', ['status'], unique=False)
    op.create_table('programinvalid',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_programinvalid_platform'), 'programinvalid', ['platform'], unique=False)
    op.create_table('programraw',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('etag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_modified', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_programraw_platform'), 'programraw', ['platform'], unique=False)
    op.add_column('evidence', sa.Column('reproduction_steps', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('evidence', sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('evidence', 'severity')
    op.drop_column('evidence', 'reproduction_steps')
    op.drop_index(op.f('ix_programraw_platform'), table_name='programraw')
    op.drop_table('programraw')
    op.drop_index(op.f('ix_programinvalid_platform'), table_name='programinvalid')
    op.drop_table('programinvalid')
    op.drop_index(op.f('ix_programclean_status'), table_name='programclean')
    op.drop_index(op.f('ix_programclean_platform'), table_name='programclean')
    op.drop_index(op.f('ix_programclean_name'), table_name='programclean')
    op.drop_table('programclean')
    # ### end Alembic commands ###
