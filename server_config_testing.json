{"extracted_information": "يحتوي المحتوى على معلومات مفصلة حول اختبار تكوين البنية التحتية للشبكة والخوادم ضمن إطار عمل OWASP WSTG. يؤكد على أهمية مراجعة التكوينات لمنع الثغرات الأمنية في البنية التحتية المعقدة لتطبيقات الويب. يغطي الجوانب المتعلقة بإدارة التكوين، واكتشاف الثغرات الأمنية المعروفة، وأدوات الإدارة، بالإضافة إلى أهداف الاختبار والخطوات اللازمة.", "specifications": {}, "pricing": {}, "features": [{"عنوان": "ملخص", "وصف": "التعقيد المتأصل للبنية التحتية المترابطة وغير المتجانسة لخادم الويب يتطلب إدارة ومراجعة التكوين كخطوة أساسية في اختبار ونشر كل تطبيق. يمكن أن تؤدي ثغرة أمنية واحدة إلى تقويض أمن البنية التحتية بأكملها. من الأهمية بمكان إجراء مراجعة متعمقة للتكوين والمشكلات الأمنية المعروفة بعد رسم خريطة للهندسة المعمارية بأكملها."}, {"عنوان": "الخطوات الواجب اتخاذها لاختبار البنية التحتية لإدارة التكوين", "نقاط": ["تحديد العناصر المختلفة التي تتكون منها البنية التحتية لفهم كيفية تفاعلها مع تطبيق الويب وتأثيرها على أمنه.", "مراجعة جميع عناصر البنية التحتية للتأكد من أنها لا تحتوي على أي ثغرات أمنية معروفة.", "إجراء مراجعة للأدوات الإدارية المستخدمة لصيانة جميع العناصر المختلفة.", "مراجعة أنظمة المصادقة للتأكد من أنها تلبي احتياجات التطبيق ولا يمكن التلاعب بها من قبل المستخدمين الخارجيين للحصول على الوصول.", "صيانة قائمة بالمنافذ المحددة المطلوبة للتطبيق والاحتفاظ بها تحت تحكم التغيير."]}, {"عنوان": "أهداف الاختبار", "نقاط": ["مراجعة تكوينات التطبيقات عبر الشبكة والتأكد من أنها ليست عرضة للاختراق.", "التحقق من أن الأطر والأنظمة المستخدمة آمنة وليست عرضة للثغرات الأمنية المعروفة بسبب البرامج غير المحدثة أو الإعدادات والاعتمادات الافتراضية."]}, {"عنوان": "كيفية الاختبار: الثغرات الأمنية المعروفة في الخادم", "نقاط": ["يمكن أن تؤدي الثغرات الأمنية في مناطق مختلفة من هندسة التطبيق (خادم الويب أو قاعدة البيانات الخلفية) إلى تعريض التطبيق للخطر بشدة.", "قد يكون من الصعب مراجعة ثغرات الخادم في اختبار الاختراق الأعمى، حيث يتم اختبارها عادةً من موقع بعيد باستخدام أداة آلية.", "قد تنتج الأدوات الآلية نتائج إيجابية كاذبة وسلبية كاذبة عند تحديد الثغرات بناءً على إصدار خادم الويب.", "لا تكشف جميع الشركات المصنعة للبرامج عن الثغرات الأمنية علنًا، مما يعني أن نقاط الضعف هذه قد لا تكون مسجلة في قواعد بيانات الثغرات الأمنية المعروفة.", "أفضل طريقة لمراجعة الثغرات هي تزويد المختبِر بمعلومات داخلية عن البرنامج (الإصدارات والإصلاحات).", "قد تقوم الشركات المصنعة أحيانًا بإصلاح الثغرات بصمت وتوفير الإصلاحات مع إصدارات البرامج الجديدة، مما يجعل تحليل المخاطر المرتبطة باستخدام الإصدارات القديمة أمرًا بالغ الأهمية."]}, {"عنوان": "كيفية الاختبار: الأدوات الإدارية", "نقاط": ["تتطلب أي بنية تحتية لخادم الويب وجود أدوات إدارية للحفاظ على المعلومات المستخدمة بواسطة التطبيق وتحديثها (مثل المحتوى الثابت، رمز المصدر، قواعد بيانات مصادقة المستخدم).", "تختلف الأدوات الإدارية المستخدمة (على سبيل المثال، واجهات إدارة قائمة على الويب، ملفات التكوين النصية، أدوات واجهة المستخدم الرسومية لنظام التشغيل).", "تتم إدارة تكوين الخادم عادةً باستخدام أدوات صيانة الملفات المختلفة (مثل خوادم FTP، WebDAV، أنظمة ملفات الشبكة).", "بعد تحديد واجهات الإدارة، من المهم مراجعتها لضمان الأمان.", "يجب تحديد الآليات التي تتحكم في الوصول إلى هذه الواجهات ونقاط ضعفها، والتأكد من تغيير اسم المستخدم وكلمة المرور الافتراضيين.", "في حالات تفويض إدارة المحتوى لجهات خارجية، غالبًا ما تكون الواجهات الإدارية متاحة عبر الإنترنت، مما يستلزم اختبارًا دقيقًا لضمان عدم وجود ثغرات أمنية."]}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [{"رقم": "[1]", "المرجع": "WebSEAL، المعروف أيضًا باسم Tivoli Authentication Manager، هو وكيل عكسي من IBM وهو جزء من إطار عمل Tivoli."}, {"رقم": "[2]", "المرجع": "مثل Symantec’s Bugtraq، ISS’ X-Force، أو NIST’s National Vulnerability Database (NVD)."}, {"رقم": "[3]", "المرجع": "هناك بعض أدوات الإدارة القائمة على واجهة المستخدم الرسومية لـ Apache (مثل NetLoony) ولكنها ليست منتشرة بعد."}]}