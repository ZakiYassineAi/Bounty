{"extracted_information": "المحتوى يقدم دليلاً شاملاً لتقنيات استكشاف نقاط النهاية المخفية والمعاملات (parameters) في سياق برامج مكافآت الأخطاء (Bug Bounty). يهدف الاستكشاف إلى توسيع سطح الهجوم المستهدف وكشف نقاط الضعف المربحة. يغطي الدليل تقنيات عملية مثل فحص المعاملات (parameter fuzzing)، التصفح القسري (forced browsing)، اكتشاف المسارات والمعاملات، استخدام قوائم الكلمات المستهدفة (wordlists)، تحليل الملفات، وتحليل جافاسكريبت.", "specifications": {"تقنيات الاستكشاف الأولية": ["إعداد Burp Suite للزحف اليدوي: تفعيل الوكيل لالتقاط كل حركة المرور، ضمان عدم حظر ملفات JavaScript و CSS.", "استكمال الزحف اليدوي بزحف Burp الآلي.", "فحص ملفات robots.txt و sitemap.xml للعثور على مسارات مهملة.", "استخدام Google dorks."], "تحليل ملفات JavaScript": "ملفات JavaScript غالباً ما تحتوي على معلومات حيوية غير مرئية في HTML، مثل نقاط نهاية API محددة، معاملات تتحكم في ميزات أو نقاط نهاية اختبار، وتظهر كمتغيرات أو وسائط دالات أو أجزاء URL. يساعد تحليل الشيفرة المصدرية في فهم كيفية عمل نقاط النهاية وتحديد أين قد توجد الأخطاء.", "أدوات تحليل JavaScript": {"LinkFinder": "أداة مبنية على Python تزحف ملفات JavaScript وتستخرج عناوين URL والمسارات والمعاملات. مثال على الأمر: `python linkfinder.py -i example.js -o cli`.", "JavaScript bookmarklets": "مقتطفات شيفرة JavaScript محفوظة كإشارة مرجعية في المتصفح، تُنفّذ عند النقر لاستخراج معلومات مثل نقاط النهاية المخفية. مثال من Renniepak.", "إضافات Burp Suite": {"JSLinkFinder": "تحلل ملفات JavaScript التي يعترضها Burp وتُبلغ عن المعاملات ونقاط النهاية مباشرة في لوحة تحكم Burp.", "GAP (Burp extension)": "متخصصة في تحليل JavaScript لنقاط النهاية والقيم المثيرة للاهتمام، وتُبرز السلوكيات غير العادية أو المتغيرات الحساسة.", "JSpector": "يقدم نهجاً شاملاً لتحليل JavaScript، كاشفاً نقاط النهاية والمعاملات ونقاط الضعف المحتملة."}}, "الاستكشاف باستخدام Fuzzing": {"التعريف": "إرسال مدخلات متنوعة وغير متوقعة (مثل المسارات، المعاملات، رؤوس HTTP) إلى نقاط نهاية التطبيق لاستكشاف المجهول، وكشف حالات الحافة أو الوظائف غير المقصودة أو نقاط الضعف المنطقية.", "أنواع Fuzzing": ["Path fuzzing: فحص الدلائل أو الملفات أو نقاط النهاية غير المدرجة للكشف عن النسخ الاحتياطية أو مناطق الاختبار أو المكونات المهملة.", "Parameter fuzzing: اختبار المعاملات غير الموثقة أو غير المتوقعة في طلبات التطبيق للكشف عن نقاط ضعف في معالجة المدخلات، مثل هجمات الحقن، تجاوز المنطق، أو معالجة البيانات غير الآمنة.", "Header fuzzing: تعديل رؤوس HTTP لكشف سوء تكوين الخادم، معلومات التصحيح، أو الخدمات التي تعمل في الخلفية."], "أهميته": "يوسع نطاق الاستكشاف، يكتشف نقاط النهاية المخفية أو السرية، يحدد سوء التكوين أو مشكلات التحكم في الوصول، يؤتمت استكشاف سلوك التطبيق، يكتسب فهماً أعمق لوظائف التطبيق المستهدف.", "الفعالية": ["تأسيس الأساس (Baseline): البدء بنقاط النهاية المكتشفة يدوياً أو عبر تحليل JavaScript أو التصفح القسري.", "التصفح القسري: تخمين منهجي لمسارات الملفات والدلائل والامتدادات للوصول إلى موارد مخفية أو مقيدة (مثال: /admin، *.bak، db_dump.sql).", "الكشف عن الملفات المخفية والنسخ الاحتياطية: اختبار إصدارات النسخ الاحتياطية للملفات الأساسية (مثال: settings.php.bak، settings.old).", "استكشاف الدلائل الإدارية أو الهامة الشائعة: اختبار أسماء الدلائل الشائعة (مثال: /admin، /control، /manage، /backend، /logs، /backup، /wp-admin/)."]}, "قوائم الكلمات (Wordlists)": {"الدور": "توجيه عملية Fuzzing بتقديم مدخلات لاختبار نقاط النهاية والمعاملات.", "المصادر الموصى بها": "SecLists (مثل common.txt، قوائم كلمات خاصة باللغة، قوائم كلمات خاصة بالإطار).", "التخصيص": "إضافة أسماء ملفات أو دلائل أو معاملات فريدة تم اكتشافها من ملفات JavaScript أو التصفح القسري. يمكن إنشاء قوائم كلمات مخصصة باستخدام أدوات مثل CeWL (تستخرج الكلمات المفتاحية من موقع ويب مستهدف).", "أدوات CLI لـ Fuzzing": {"ffuf": "أداة سريعة ومرنة لاكتشاف الدلائل والمعاملات. مثال على الأمر: `ffuf -w wordlist.txt -u http://target.com/FUZZ`.", "dirb": "يتضمن قوائم كلمات مدمجة ويحدد الموارد بسرعة بإدخال URL المستهدف."}}, "Burp Intruder": "مفيد جداً لـ fuzzing المعاملات، يمكنه إرسال حمولات متعددة إلى معاملات معروفة وتحليل استجابة الخادم. يمكن إنشاء حمولات مخصصة (نطاقات رقمية، قوائم أحرف، قوائم كلمات مخصصة). مفيد لأتمتة اختبار نقاط الضعف مثل IDOR (Insecure Direct Object References).", "تحليل النتائج وتكرارها ودمجها": "بعد جمع النتائج، يتم فرزها لتحديد الفرص الواعدة. دمج نقاط النهاية أو المعاملات المكتشفة حديثاً في خط أنابيب الاختبار من خلال تحسين قوائم الكلمات، تعديل الحمولات (مثال: حمولات مخصصة لحقن SQL، XSS، تجاوز المصادقة)، ودمج التقنيات (مثال: التصفح القسري لدلائل مختلفة، فحص المعاملات المتقدمة على نقاط النهاية الجديدة)."}, "pricing": {}, "features": ["اكتشاف نقاط النهاية والمعاملات المخفية وغير الموثقة.", "توسيع سطح الهجوم المستهدف.", "تحديد نقاط الدخول لنقاط الضعف المربحة.", "استخدام الأدوات الآلية واليدوية للاستكشاف.", "الاستفادة من تحليل الشيفرة (خاصة JavaScript) للكشف عن أسرار التطبيق.", "تطبيق تقنيات Fuzzing المنهجية (المسار، المعاملة، الرأس) لكشف السلوكيات غير المتوقعة.", "تخصيص وتحسين قوائم الكلمات لزيادة فعالية الاستكشاف.", "دمج نتائج الاستكشاف في دورة اختبار مستمرة لتحسين الفعالية."], "statistics": {}, "temporal_info": {"تاريخ النشر": "January 9, 2025"}, "geographical_data": {}, "references": ["https://www.yeswehack.com/learn-bug-bounty/parameter-discovery-quick-guide-to-start (Parameter Discovery: A quick guide)", "https://github.com/GerbenJavado/LinkFinder", "https://bsky.app/profile/renniepak.nl (Renniepak's JavaScript bookmarklet)", "https://github.com/PortSwigger/js-link-finder (JSLinkFinder Burp extension)", "https://github.com/xnl-h4ck3r/GAP-Burp-Extension (GAP Burp extension)", "https://github.com/hisxo/JSpector (JSpector)", "https://github.com/danielmiessler/SecLists/tree/master (SecLists)", "https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/common.txt (common.txt wordlist)", "https://github.com/xmendez/wfuzz/blob/master/wordlist/vulns/coldfusion.txt (ColdFusion wordlist example)", "https://github.com/digininja/CeWL (CeWL)", "https://github.com/ffuf/ffuf (ffuf)", "https://github.com/v0re/dirb (dirb)", "https://www.yeswehack.com/learn-bug-bounty/http-header-exploitation (HTTP Header Exploitation)", "https://yeswehack.com/programs (YesWeHack Public Bug Bounty Programs)"]}